version: 1
name: iis and LB 
inputs:
  diskplacement:
    type: string
    oneOf:
      - title: medium IOS Disk (SAS)
        const: size:silver01
      - title: high IOS Disk (SSD)
        const: size:gold01
      - title: Independent HardDisk (SSD)
        const: size:gold03
  instancenumber:
    type: number
    description: Enter Number Instances
    minimum: 1
    maximum: 2
  Username:
    type: string
    description: Username to login
    pattern: '[a-z0-9A-Z]+'
  Password:
    type: string
    description: Username to min four character
    encrypted: true
    pattern: '[a-z0-9A-Z]+'
    minLength: 4
    maxLength: 16
resources:
  Cloud_SecurityGroup_1:
    type: Cloud.SecurityGroup
    metadata:
      layoutPosition:
        - 0
        - 3
    properties:
      rules:
        - direction: inbound
          source: any
          name: httponly
          access: Allow
          ports: 80
          protocol: tcp
      securityGroupType: new
  Cloud_NSX_Gateway_1:
    type: Cloud.NSX.Gateway
    metadata:
      layoutPosition:
        - 1
        - 0
    properties:
      networks:
        - ${resource.Cloud_NSX_Network_1.id}
        - ${resource.Cloud_NSX_Network_2.id}
  Cloud_NSX_Nat_1:
    type: Cloud.NSX.Nat
    metadata:
      layoutPosition:
        - 1
        - 1
    properties:
      gateway: ${resource.Cloud_NSX_Gateway_1.id}
      natRules:
        - translatedInstance: ${resource.Cloud_NSX_LoadBalancer_1.id}
          index: 0
          sourcePorts: 80
          sourceIPs: any
          translatedPorts: 80
          destinationPorts: 80
  Cloud_NSX_LoadBalancer_1:
    type: Cloud.NSX.LoadBalancer
    metadata:
      layoutPosition:
        - 1
        - 2
    properties:
      routes:
        - protocol: HTTP
          port: '80'
          instanceProtocol: HTTP
          instancePort: '80'
          healthCheckConfiguration:
            intervalSeconds: 60
            timeoutSeconds: 5
            unhealthyThreshold: 5
            healthyThreshold: 2
            port: 80
            protocol: HTTP
      network: ${resource.Cloud_NSX_Network_1.id}
      instances: ${resource.Cloud_Machine_1[*].id}
      gateway: ${resource.Cloud_NSX_Gateway_1.id}
  Cloud_Machine_1:
    type: Cloud.Machine
    metadata:
      layoutPosition:
        - 1
        - 3
    properties:
      customizationSpec: Generate New Name and SID
      image: win2022
      flavor: medium
      count: ${input.instancenumber}
      constraints:
        - tag: env:prod
      networks:
        - network: ${resource.Cloud_NSX_Network_2.id}
          assignment: static
          securityGroups:
            - ${resource.Cloud_SecurityGroup_1.id}
      attachedDisks: []
      cloudConfig: |
        #cloud-config
         users:
          -
           name: ${input.Username}
           gecos: '${input.Username}'
           primary_group: Administrators
           passwd: ${input.Password}
         write_files:
          content: | 
           Install-WindowsFeature -name Web-Server -IncludeManagementTools
           mkdir C:\MyApp\
           New-Item -Path "C:\MyApp\testpage.html" -ItemType File
           Set-Content -Path "C:\MyApp\testpage.html" -Value "<body><h1>Hello World</h1></body>"
           New-WebApplication -Name "MyApp" -Site "Default Web Site" -PhysicalPath "C:\MyApp\" -ApplicationPool "DefaultAppPool"
          path: C:\test.ps1
         runcmd: 
          - 'PowerShell -NoProfile -ExecutionPolicy Bypass -Command "& {Start-Process PowerShell -ArgumentList (Set-ExecutionPolicy Unrestricted -Force) -Verb RunAs}"'
          - 'PowerShell C:\\test.ps1'
  Cloud_NSX_Network_1:
    type: Cloud.NSX.Network
    metadata:
      layoutPosition:
        - 2
        - 0
    properties:
      networkType: outbound
      constraints:
        - tag: net:od3
  Cloud_NSX_Network_2:
    type: Cloud.NSX.Network
    metadata:
      layoutPosition:
        - 3
        - 0
    properties:
      networkType: outbound
      constraints:
        - tag: net:od3
